set -g base-index 1

bind 0 select-window -t :0
bind 1 select-window -t :1
bind 2 select-window -t :2
bind 3 select-window -t :3
bind 4 select-window -t :4
bind 5 select-window -t :5
bind 6 select-window -t :6
bind 7 select-window -t :7
bind 8 select-window -t :8
bind 9 select-window -t :9

bind C-p previous-window
bind C-n next-window

set -s extended-keys on
set-option -g xterm-keys on
set -as terminal-features 'xterm*:extkeys'
set-option -g allow-passthrough on
#
set-window-option -g xterm-keys on

bind-key -n C-S-Left previous-window
bind-key -n C-S-Right next-window

# bind-key -n 1 run-shell "lua ~/bin/tmux-ctrl.lua 1"
# bind-key -n C-b list-key # run-shell "lua ~/bin/tmux-ctrl.lua 2"
# bind-key -n Escape run-shell "lua ~/bin/tmux-ctrl.lua 3"
# # bind-key -n 3 run-shell "lua ~/bin/tmux-ctrl.lua 3"
# bind-key -n ^\ run-shell "lua ~/bin/tmux-ctrl.lua 4"
# bind-key -n 5 run-shell "lua ~/bin/tmux-ctrl.lua 5"
# bind-key -n 6 run-shell "lua ~/bin/tmux-ctrl.lua 6"
# bind-key -n 7 run-shell "lua ~/bin/tmux-ctrl.lua 7"
# bind-key -n 8 run-shell "lua ~/bin/tmux-ctrl.lua 8"
# bind-key -n 9 run-shell "lua ~/bin/tmux-ctrl.lua 9"
# bind-key -n 0 run-shell "lua ~/bin/tmux-ctrl.lua 0"


# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

set -g default-shell /bin/bash
set -g default-command "/bin/bash"
set-option -g default-terminal "xterm-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
#set-option -sa terminal-overrides ",tmux*:Tc"

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
# set-option -g status-bg colour235 #base02
# set-option -g status-fg colour136 #yellow
# set-option -g status-attr default

# set window split
bind-key v split-window -h
bind-key b split-window

set -g status-interval 1
#set -g status-justify centre # center align window list
#set -g status-left-length 20
#set -g status-right-length 140
#set -g status-left '#[fg=black]#H #[fg=black]â€¢ #[fg=black,dim]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"

# status bar
set-option -g status-utf8 on

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind %; bind % split-window -h -c "#{pane_current_path}"'


set -g mouse on 
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
# set -g mouse-select-pane on


# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'catppuccin/tmux#v2.1.1' # See https://github.com/catppuccin/tmux/tags for additional tags
# ...alongside

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'

set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato or mocha

# Some basic mocha colors.
set -g @ctp_bg "#24273a"
set -g @ctp_surface_1 "#494d64"
set -g @ctp_fg "#ffffff"
set -g @ctp_mauve "#46c0f6"
set -g @ctp_crust "#181926"

# status line
set -gF status-style "bg=#{@ctp_bg},fg=#{@ctp_fg}"

# windows
set -gF window-status-format "#[bg=#{@ctp_surface_1},fg=#{@ctp_fg}] ##I ##W "
set -gF window-status-current-format "#[bg=#{@ctp_mauve},fg=#{@ctp_crust}] ##I ##W "

#run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
