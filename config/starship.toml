# directory_color Insert a blank line between shell prompts
add_newline = true

# Increase the default command timeout to 2 seconds
command_timeout = 2000

# Place this line directly under the `command_timeout` entry at the top of the file
palette = "catppuccin_macchiato"

# Define the order and format of the information in our prompt
format = """
[](fg:time_color)\
$symbol($time$cmd_duration[](fg:time_color bg:directory_color))\
$directory\
${custom.directory_separator_not_git}\
${custom.directory_separator_git}\
$symbol($git_branch[](fg:git_color))\
$symbol( $git_commit$git_metrics$git_state)$nodejs
$character"""

# Fill character (empty space) between the left and right prompt
# [fill]
# symbol = " "

[time]
time_format = "%T"
format = "([  $time]($style))"
disabled = false
style = "fg:time_text bg:time_color"

# Disable the line break between the first and second prompt lines
[line_break]
disabled = true

# Customize the format of the working directory
[directory]
truncate_to_repo = true
format = "([   $path ]($style))"
style = "fg:directory_text bg:directory_color"

[git_branch]
symbol = " "
format = "[ $symbol$branch(:$remote_branch) ]($style)"
style = "fg:git_text bg:git_color"

[git_metrics]
disabled = true

[git_state]
disabled = false

[nodejs]
format = "via [$symbol($version )]($style)"
style = "yellow"

[package]
disabled = true # Enable to output the current working directory's package version
format = "[$symbol$version]($style) "
display_private = true

[cmd_duration]
min_time = 1_000
format = "[   $duration ]($style)"
show_milliseconds = true
style = "fg:time_text bg:time_color"

# Customize the battery indicator
[battery]
format = "[$symbol $percentage]($style) "
empty_symbol = "🪫"
charging_symbol = "🔋"
full_symbol = '🔋'

[[battery.display]]
threshold = 10
style = 'red'

# Output the current git config email address
[custom.git_config_email]
description = "Output the current git user's configured email address."
command = "git config user.email"
format = "\n[$symbol(  $output)]($style)"
# Only when inside git repository
when = "git rev-parse --is-inside-work-tree >/dev/null 2>&1"
style = "text"

# Output a styled separator right after the directory when inside a git repository.
[custom.directory_separator_git]
description = "Output a styled separator right after the directory when inside a git repository."
command = ""
format = "[](fg:directory_color bg:git_color)"
# Only when inside git repository
when = "git rev-parse --is-inside-work-tree >/dev/null 2>&1"

# Output a styled separator right after the directory when NOT inside a git repository.
[custom.directory_separator_not_git]
description = "Output a styled separator right after the directory when NOT inside a git repository."
command = ""
format = "[](fg:#directory_color bg:git_color)"
# Only when NOT inside a git repository
when = "! git rev-parse --is-inside-work-tree > /dev/null 2>&1"


# Then, this `palettes` entry can go at the bottom of the TOML file
# You may add additional palettes as desired.
[palettes.catppuccin_macchiato]
rosewater = "#f4dbd6"
flamingo = "#f0c6c6"
pink = "#f5bde6"
mauve = "#c6a0f6"
red = "#ed8796"
maroon = "#ee99a0"
peach = "#f5a97f"
yellow = "#eed49f"
green = "#a6da95"
teal = "#8bd5ca"
sky = "#91d7e3"
sapphire = "#7dc4e4"
blue = "#8aadf4"
lavender = "#b7bdf8"
text = "#cad3f5"
subtext1 = "#b8c0e0"
subtext0 = "#a5adcb"
overlay2 = "#939ab7"
overlay1 = "#8087a2"
overlay0 = "#6e738d"
surface2 = "#5b6078"
surface1 = "#494d64"
surface0 = "#363a4f"
base = "#24273a"
mantle = "#1e2030"
crust = "#181926"

time_color = "#16201B"
time_text = "#FFFFFF"

directory_color = "#203040"
directory_text = "#FFFFFF"

git_color = "#422222"
git_text = "#FFFFFF"
